tested:
    match-case
    --------------------------------------------------------------------------
    New pattern matching for Python



    [traceback]
        format_exception_only
        format_exception
        print_exception
    --------------------------------------------------------------------------
    Can now take an exception object as a positional-only argument.



    [socket]
        htons
        ntohs
    --------------------------------------------------------------------------
    Raise OverflowError instead of DeprecationWarning the given parameter
    will not fit in a 16-bit unsigned integer.



    types.FunctionType constructor
    --------------------------------------------------------------------------
    In Python3.9 the binding is more late-ish binding, than true late binding.
    But I was surprised when there is a true late binding like Python3.10
    in Pypy. So, I tested the test against python3.9 standard version and got
    the expected result with more late-ish binding.



    changes in the Python syntax
    --------------------------------------------------------------------------
    Deprecation warning is now emitted when compiling previously valid syntax
    if the numeric literal is immediately followed by a keyword(like in 0in x)



    inconsistent __args__ beetwen collections.abc.Callable and typing.Callable
    --------------------------------------------------------------------------
    As I understand it, in the tab from the table with changes from 3.9 to
    3.10 there should be a difference between collections.abc.Callable[[int,
    int], int] and typing.Callable[[int, int], int]. But in standard such
    problem was already resolved, so both interpreters passed the test.
    I also tested the new template specifications - ParamSec, TypeVar for
    these modules, but there is a problem connecting them to test_run, so I
    ran them separately.



run:
    python test_run



expected:
    test_complexPatterns (match_tests.MatchTest)
    Testing complex patterns ... ok
    test_simpleMatch (match_tests.MatchTest)
    Testing simple example for new pattern matching in Python ... ok
    test_withClass (match_tests.MatchTest)
    Testing pattern matching with classes and guard ... ok
    test_withDict (match_tests.MatchTest)
    Testing dictionary matching patterns ... expected failure
    test_new_arg_name (traceback_tests.FormatExcOnlyTest)
    Testing new name for first parameter in method format_exception_only. ... ok
    test_new_calling_style (traceback_tests.FormatExcOnlyTest)
    Testing new opportunity that an exception object can be passed ... ok
    test_new_arg_name (traceback_tests.FormatExcTest)
    Testing new name for first parameter in method format_exception. ... ok
    test_new_calling_style (traceback_tests.FormatExcTest)
    Testing new opportunity that an exception object can be passed ... ok
    test_new_arg_name (traceback_tests.PrintExceptionTest)
    Testing new name for first parameter in method print_exception. ... ok
    test_new_calling_style (traceback_tests.PrintExceptionTest)
    Testing new opportunity that an exception object can be passed ... ok
    test_false_htons (socket_tests.ConvertFunctionTest)
    Testing throwing OverflowError exception if data does not ... ok
    test_false_ntohs (socket_tests.ConvertFunctionTest)
    Testing throwing OverflowError exception if data does not ... ok
    test_true_htons (socket_tests.ConvertFunctionTest)
    Testing correct working if data fit in a 16-bit ... expected failure
    test_true_ntohs (socket_tests.ConvertFunctionTest)
    Testing correct working if data fit in a 16-bit ... expected failure
    test_hack_v10 (function_type_tests.FunctionTypeTest)
    Testing types.FunctionType constructor with Cpython ... ok
    test_hack_v9 (function_type_tests.FunctionTypeTest)
    Testing types.FunctionType constructor with Pypy ... skipped 'specific test'
    test_keywords (syntax_tests.SyntaxTest)
    Testing syntax of all keywords with numeric literal ... ok

    ----------------------------------------------------------------------
    Ran 17 tests in 0.012s


Cpython:
    test_complexPatterns (match_tests.MatchTest)
    Testing complex patterns ... ok
    test_simpleMatch (match_tests.MatchTest)
    Testing simple example for new pattern matching in Python ... ok
    test_withClass (match_tests.MatchTest)
    Testing pattern matching with classes and guard ... ok
    test_withDict (match_tests.MatchTest)
    Testing dictionary matching patterns ... expected failure
    test_new_arg_name (traceback_tests.FormatExcOnlyTest)
    Testing new name for first parameter in method format_exception_only. ... ok
    test_new_calling_style (traceback_tests.FormatExcOnlyTest)
    Testing new opportunity that an exception object can be passed ... ok
    test_new_arg_name (traceback_tests.FormatExcTest)
    Testing new name for first parameter in method format_exception. ... ok
    test_new_calling_style (traceback_tests.FormatExcTest)
    Testing new opportunity that an exception object can be passed ... ok
    test_new_arg_name (traceback_tests.PrintExceptionTest)
    Testing new name for first parameter in method print_exception. ... ok
    test_new_calling_style (traceback_tests.PrintExceptionTest)
    Testing new opportunity that an exception object can be passed ... ok
    test_false_htons (socket_tests.ConvertFunctionTest)
    Testing throwing OverflowError exception if data does not ... ok
    test_false_ntohs (socket_tests.ConvertFunctionTest)
    Testing throwing OverflowError exception if data does not ... ok
    test_true_htons (socket_tests.ConvertFunctionTest)
    Testing correct working if data fit in a 16-bit ... expected failure
    test_true_ntohs (socket_tests.ConvertFunctionTest)
    Testing correct working if data fit in a 16-bit ... expected failure
    test_hack_v10 (function_type_tests.FunctionTypeTest)
    Testing types.FunctionType constructor with Cpython ... ok
    test_hack_v9 (function_type_tests.FunctionTypeTest)
    Testing types.FunctionType constructor with Pypy ... skipped 'specific test'
    test_keywords (syntax_tests.SyntaxTest)
    Testing syntax of all keywords with numeric literal ... ok

    ----------------------------------------------------------------------
    Ran 17 tests in 0.012s


    inconsistent __args__ beetwen collections.abc.Callable and typing.Callable

    ..
    ----------------------------------------------------------------------
    Ran 2 tests in 0.001s

    OK



Pypy:

    match-case
    --------------------------------------------------------------------------

    match param:
          ^
SyntaxError: invalid syntax


    [traceback]
        format_exception_only
        format_exception
        print_exception
    --------------------------------------------------------------------------

    FEFEEE
    ======================================================================
    ERROR: test_new_calling_style (__main__.FormatExcOnlyTest)
    Testing new opportunity that an exception object can be passed
    ----------------------------------------------------------------------
    Traceback (most recent call last):
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/traceback_tests.py", line 17, in test_new_calling_style
        num1 / num2
    ZeroDivisionError: division by zero

    During handling of the above exception, another exception occurred:

    Traceback (most recent call last):
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/traceback_tests.py", line 20, in test_new_calling_style
        traceback_new_out: list = format_exception_only(e)
    TypeError: format_exception_only() missing 1 required positional argument: 'value'

    ======================================================================
    ERROR: test_new_calling_style (__main__.FormatExcTest)
    Testing new opportunity that an exception object can be passed
    ----------------------------------------------------------------------
    Traceback (most recent call last):
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/traceback_tests.py", line 43, in test_new_calling_style
        chr(-97)
    ValueError: chr() arg not in range(0x110000)

    During handling of the above exception, another exception occurred:

    Traceback (most recent call last):
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/traceback_tests.py", line 46, in test_new_calling_style
        traceback_new_out: list = format_exception(e)
    TypeError: format_exception() missing 2 required positional arguments: 'value' and 'tb'

    ======================================================================
    ERROR: test_new_arg_name (__main__.PrintExceptionTest)
    Testing new name for first parameter in method print_exception.
    ----------------------------------------------------------------------
    Traceback (most recent call last):
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/traceback_tests.py", line 67, in setUp
        "text" + 10
    TypeError: can only concatenate str (not "int") to str

    During handling of the above exception, another exception occurred:

    Traceback (most recent call last):
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/traceback_tests.py", line 71, in setUp
        print_exception(e, file=exc_file)
    TypeError: print_exception() missing 2 required positional arguments: 'value' and 'tb'

    ======================================================================
    ERROR: test_new_calling_style (__main__.PrintExceptionTest)
    Testing new opportunity that an exception object can be passed
    ----------------------------------------------------------------------
    Traceback (most recent call last):
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/traceback_tests.py", line 67, in setUp
        "text" + 10
    TypeError: can only concatenate str (not "int") to str

    During handling of the above exception, another exception occurred:

    Traceback (most recent call last):
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/traceback_tests.py", line 71, in setUp
        print_exception(e, file=exc_file)
    TypeError: print_exception() missing 2 required positional arguments: 'value' and 'tb'

    ======================================================================
    FAIL: test_new_arg_name (__main__.FormatExcOnlyTest)
    Testing new name for first parameter in method format_exception_only.
    ----------------------------------------------------------------------
    Traceback (most recent call last):
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/traceback_tests.py", line 33, in test_new_arg_name
        self.assertEqual(check_name, "exc")
    AssertionError: 'etype' != 'exc'
    - etype
    + exc


    ======================================================================
    FAIL: test_new_arg_name (__main__.FormatExcTest)
    Testing new name for first parameter in method format_exception.
    ----------------------------------------------------------------------
    Traceback (most recent call last):
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/traceback_tests.py", line 58, in test_new_arg_name
        self.assertEqual(check_name, "exc")
    AssertionError: 'etype' != 'exc'
    - etype
    + exc


    ----------------------------------------------------------------------
    Ran 6 tests in 0.003s

    FAILED (failures=2, errors=4)


    [socket]
        htons
        ntohs
    --------------------------------------------------------------------------

    /home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/socket_tests.py:47: DeprecationWarning: htons: Python int too large to convert to C 16-bit unsigned integer (The silent truncation is deprecated)
    int32_network = socket.htons(int32_host)
    F/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/socket_tests.py:26: DeprecationWarning: ntohs: Python int too large to convert to C 16-bit unsigned integer (The silent truncation is deprecated)
    int32_host = socket.ntohs(self.int32_bit)
    Fxx
    ======================================================================
    FAIL: test_false_htons (__main__.ConvertFunctionTest)
    Testing throwing OverflowError exception if data does not
    ----------------------------------------------------------------------
    Traceback (most recent call last):
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/socket_tests.py", line 47, in test_false_htons
        int32_network = socket.htons(int32_host)
    AssertionError: OverflowError not raised

    ======================================================================
    FAIL: test_false_ntohs (__main__.ConvertFunctionTest)
    Testing throwing OverflowError exception if data does not
    ----------------------------------------------------------------------
    Traceback (most recent call last):
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/socket_tests.py", line 26, in test_false_ntohs
        int32_host = socket.ntohs(self.int32_bit)
    AssertionError: OverflowError not raised

    ----------------------------------------------------------------------
    Ran 4 tests in 0.001s

    FAILED (failures=2, expected failures=2)



    types.FunctionType constructor
    --------------------------------------------------------------------------

    .s
    ----------------------------------------------------------------------
    Ran 2 tests in 0.000s

    FAILED (failures=8, errors=8, skipped=8, expected failures=8, unexpected successes=8)




    changes in the Python syntax
    --------------------------------------------------------------------------

    F
    ======================================================================
    FAIL: test_keywords (__main__.SyntaxTest)
    Testing syntax of all keywords with numeric literal
    ----------------------------------------------------------------------
    Traceback (most recent call last):
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/syntax_tests.py", line 17, in test_keywords
        test_with_keyword("0and 123")
    File "/home/sasha_pavlov/Work_mb/Pavlov_testtask/pythonProject/syntax_tests.py", line 9, in test_with_keyword
        compile(test, "", "eval")
    AssertionError: DeprecationWarning not triggered

    ----------------------------------------------------------------------
    Ran 1 test in 0.002s

    FAILED (failures=1)


    inconsistent __args__ beetwen collections.abc.Callable and typing.Callable
    --------------------------------------------------------------------------

    .s
    ----------------------------------------------------------------------
    Ran 2 tests in 0.000s

    OK (skipped=1)


